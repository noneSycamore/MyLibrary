{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Sycamore \u306e Library \u00b6 A Library to store some Scrips... Tree: Math_modeling \u251c\u2500\u2500 Assignment 1.md \u2514\u2500\u2500 Starting.md Scrips \u251c\u2500\u2500 CTF_quiz \u2502 \u251c\u2500\u2500 Crypto \u2502 \u2502 \u251c\u2500\u2500 Multiple_Chaos_Maps \u2502 \u2502 \u2502 \u251c\u2500\u2500 chaos.md \u2502 \u2502 \u2502 \u2514\u2500\u2500 exp.md \u2502 \u2502 \u2514\u2500\u2500 Random_predict \u2502 \u2502 \u251c\u2500\u2500 exp.md \u2502 \u2502 \u2514\u2500\u2500 task.md \u2502 \u2514\u2500\u2500 Misc \u2502 \u2514\u2500\u2500 Chaos_and_Pic \u2502 \u2514\u2500\u2500 chaos.md \u251c\u2500\u2500 CTF_scrips \u2502 \u251c\u2500\u2500 Caser_\u7206\u7834.md \u2502 \u251c\u2500\u2500 RSA_\u5e38\u89c1.md \u2502 \u251c\u2500\u2500 SHA256_\u9a8c\u8bc1\u7801\u7206\u7834.md \u2502 \u251c\u2500\u2500 base64_\u591a\u884c.md \u2502 \u251c\u2500\u2500 secret.md \u2502 \u251c\u2500\u2500 wave_\u97f3\u9891\u5904\u7406.md \u2502 \u2514\u2500\u2500 \u624b\u673a\u952e\u76d8\u5bc6\u7801.md \u251c\u2500\u2500 Setup \u2502 \u251c\u2500\u2500 Docker_Ubuntu1804.md \u2502 \u251c\u2500\u2500 Library_readin.md \u2502 \u251c\u2500\u2500 Scrips_to_md.md \u2502 \u251c\u2500\u2500 Ubuntu_AWD.md \u2502 \u251c\u2500\u2500 Ubuntu_Docker.md \u2502 \u251c\u2500\u2500 Ubuntu_zsh.md \u2502 \u251c\u2500\u2500 filetree.md \u2502 \u2514\u2500\u2500 git_Setup.md \u2514\u2500\u2500 Starting.md Every time before using \u00b6 Remember to pull the repo git pull MyLibrary master Using Mkdocs \u00b6 mkdocs serve % create local service, whitch is lively uploading mkdocs gh-deploy % build a static page, and upload to github gh-pages branch Before using mkdocs ghdeploy to update gh-pages branch, Remember to fetch the repo: git fetch Haw to upload \u00b6 uploading to Github master python3 Scrips_to_md.py python3 readin.py python3 filetree.py git add * git commit -m 'update' git push origin master","title":"Home"},{"location":"#welcome-to-sycamore-library","text":"A Library to store some Scrips... Tree: Math_modeling \u251c\u2500\u2500 Assignment 1.md \u2514\u2500\u2500 Starting.md Scrips \u251c\u2500\u2500 CTF_quiz \u2502 \u251c\u2500\u2500 Crypto \u2502 \u2502 \u251c\u2500\u2500 Multiple_Chaos_Maps \u2502 \u2502 \u2502 \u251c\u2500\u2500 chaos.md \u2502 \u2502 \u2502 \u2514\u2500\u2500 exp.md \u2502 \u2502 \u2514\u2500\u2500 Random_predict \u2502 \u2502 \u251c\u2500\u2500 exp.md \u2502 \u2502 \u2514\u2500\u2500 task.md \u2502 \u2514\u2500\u2500 Misc \u2502 \u2514\u2500\u2500 Chaos_and_Pic \u2502 \u2514\u2500\u2500 chaos.md \u251c\u2500\u2500 CTF_scrips \u2502 \u251c\u2500\u2500 Caser_\u7206\u7834.md \u2502 \u251c\u2500\u2500 RSA_\u5e38\u89c1.md \u2502 \u251c\u2500\u2500 SHA256_\u9a8c\u8bc1\u7801\u7206\u7834.md \u2502 \u251c\u2500\u2500 base64_\u591a\u884c.md \u2502 \u251c\u2500\u2500 secret.md \u2502 \u251c\u2500\u2500 wave_\u97f3\u9891\u5904\u7406.md \u2502 \u2514\u2500\u2500 \u624b\u673a\u952e\u76d8\u5bc6\u7801.md \u251c\u2500\u2500 Setup \u2502 \u251c\u2500\u2500 Docker_Ubuntu1804.md \u2502 \u251c\u2500\u2500 Library_readin.md \u2502 \u251c\u2500\u2500 Scrips_to_md.md \u2502 \u251c\u2500\u2500 Ubuntu_AWD.md \u2502 \u251c\u2500\u2500 Ubuntu_Docker.md \u2502 \u251c\u2500\u2500 Ubuntu_zsh.md \u2502 \u251c\u2500\u2500 filetree.md \u2502 \u2514\u2500\u2500 git_Setup.md \u2514\u2500\u2500 Starting.md","title":"Welcome to Sycamore \u306e Library"},{"location":"#every-time-before-using","text":"Remember to pull the repo git pull MyLibrary master","title":"Every time before using"},{"location":"#using-mkdocs","text":"mkdocs serve % create local service, whitch is lively uploading mkdocs gh-deploy % build a static page, and upload to github gh-pages branch Before using mkdocs ghdeploy to update gh-pages branch, Remember to fetch the repo: git fetch","title":"Using Mkdocs"},{"location":"#haw-to-upload","text":"uploading to Github master python3 Scrips_to_md.py python3 readin.py python3 filetree.py git add * git commit -m 'update' git push origin master","title":"Haw to upload"},{"location":"Math_modeling/Assignment%201/","text":"Assignment 1 \u00b6 One \u00b6 Please use the built-in MATLAB function ( dsolve ) to solve the $1^{st}$ order differential equation: $y\u2019(x) = xy$ . \u7528 eqn \u5b58\u50a8\u5fae\u5206\u65b9\u7a0b\u7684\u8868\u8fbe\u5f0f\uff0c\u76f4\u63a5\u7528 dsolve() \u51fd\u6570\u5f97\u5230\uff1a $y(x)= C1 \\times e^{\\frac{x^2}{2}}$ exp \uff1a matlab syms y(x) eqn = diff(y,x) == x*y; res = dsolve(eqn) Two \u00b6 Please solve the initial value problem, which is $y\u2019(x) = xy$ with $y(1) = 1$ . \u589e\u52a0\u53d8\u91cf con \uff0c\u5b58\u50a8 $y(1) = 1$ \uff0c\u4ee3\u5165 dsove() \u51fd\u6570\uff0c\u53ef\u4ee5\u6c42\u5f97\uff1a $y(x)= e^{-\\frac{1}{2}} \\times e^{\\frac{x^2}{2}}$ \u5373\uff0c $y(x)= e^{\\frac{x^2-1}{2}}$ exp \uff1a matlab syms y(x) eqn = diff(y,x) == x*y; con = y(1) == 1; y = dsolve(eqn,con) simy = simplify(y) Three \u00b6 Please solve the $2^{nd}$ order differential equation: $y\u2019\u2019(x) + 8y\u2019(x) + 2y(x) = cos(x)$ with $y(0) = 0$ and $y\u2019(0) = 1$ . \u4ee4 $y''(x) = Dy$ \uff0c $y'(x) = D2y$ \uff0c eqn \u5b58\u50a8\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u8868\u8fbe\u5f0f\uff0c con1 \u548c con2 \u5206\u522b\u5b58\u50a8 $y(0) = 0$ \u548c $y\u2019(0) = 1$ \uff0c\u4ee3\u5165 dsove() \u51fd\u6570\uff0c\u6c42\u5f97\uff1a $y(x) = \\frac{1}{\\sqrt 65}sin(x + atan(\\frac{1}{8})) - \\frac{1}{1820}((14 - 53\\sqrt 14)e^{-(\\sqrt 14 + 4)x}+(-14 + 53\\sqrt 14)e^{(\\sqrt 14 - 4)x})$ exp \uff1a matlab syms y(x) Dy = diff(y,x); D2y = diff(Dy,x); eqn = D2y + 8 * Dy + 2 * y == cos(x); con1 = y(0) == 0; con2 = Dy(0) == 1; y = dsolve(eqn,con1,con2); simy = simplify(y) Four \u00b6 Please solve the numerical solution of the 1st ode: y\u2019(x)=xy^2+y with y(0) = 1 and the x domain is [0, 0.5]. Try to use ode23 (https://www.mathworks.com/help/matlab/ref/ode23.html) and ode45 (https://www.mathworks.com/help/matlab/ref/ode45.html) respectively and compare the numerical results. ode23 \uff1a\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ode45 \uff1a Compare \uff1a exp \uff1a matlab xdomain = [0 0.5]; y_0 = 1; [x1,y1] = ode23(@(x1,y1) x1*y1^2+y1, xdomain, y_0); [x2,y2] = ode45(@(x2,y2) x2*y2^2+y2, xdomain, y_0); figure(1); plot(x1,y1,'-o') legend('y_ode23') figure(2); plot(x2,y2,'-.') legend('y_ode45') figure(3); plot(x1,y1,'-o',x2,y2,'-.') legend('y_ode23','y_ode45') Five \u00b6 Solve the system of Lorenz equations (You may find this page very helpful with MATLAB/Python code: https://en.wikipedia.org/wiki/Lorenz_system). (1) Discuss the system behavior under the constant values: sigma, rho, and beta; (2) Comment the robustness of the dynamical system under different conditions. $${\\begin{aligned}{\\frac {\\mathrm {d} x}{\\mathrm {d} t}}=\\sigma (y-x),\\ {\\frac {\\mathrm {d}y}{\\mathrm {d}t}}=x(\\rho -z)-y,\\ {\\frac {\\mathrm {d} z}{\\mathrm {d} t}} =xy-\\beta z.\\end{aligned}}$$ \u53c2\u6570 \u03c3 \u79f0\u4e3a\u666e\u5170\u7279\u6570\uff0c \u03c1 \u662f\u89c4\u8303\u5316\u7684\u745e\u5229\u6570\uff0c \u03b2 \u548c\u51e0\u4f55\u5f62\u72b6\u76f8\u5173 \u4ee4 sigma = 10 \uff0c beta = 8/3 \uff0c rho = 13 \uff0c\u83b7\u5f97\u56fe\u50cf\uff1a \u4ee4 sigma = 10 \uff0c beta = 8/3 \uff0c rho = 160 \uff0c\u83b7\u5f97\u56fe\u50cf\uff1a \u4ee4 sigma = 10 \uff0c beta = 8/3 \uff0c rho = 28 \uff0c\u83b7\u5f97\u56fe\u50cf\uff1a exp \uff1a ```matlab sigma = 10; beta = 8/3; rho = 28; f = @(t,a) [-sigma a(1) + sigma a(2); rho a(1) - a(2) - a(1) a(3); -beta a(3) + a(1) a(2)]; [t,a] = ode45(f,[0 100],[1 1 1]); plot3(a(:,1),a(:,2),a(:,3)) ``` Six \u00b6 Consider Lotka-Volterra equations (https://en.wikipedia.org/wiki/Lotka%E2%80%93Volterra_equations), which is known as predatory-prey equations: (1) Plot the phase portrait; (2) Compare the results using ode23 and ode45. Lotka-Volterra \u65b9\u7a0b\u662f\u7531\u4e24\u4e2a\u4e00\u9636\u975e\u7ebf\u6027 ODE \u7ec4\u6210\u7684\u65b9\u7a0b\u7ec4\uff0c\u7528\u4e8e\u63cf\u8ff0\u751f\u7269\u7cfb\u7edf\u4e2d\u6355\u98df\u8005\u548c\u730e\u7269\u7684\u79cd\u7fa4\u3002\u79cd\u7fa4\u6839\u636e\u4ee5\u4e0b\u65b9\u7a0b\u7ec4\u968f\u65f6\u95f4\u53d8\u5316\uff1a $$\\begin{cases}\\dfrac{dx}{dt} = \\alpha x - \\beta xy \\ \\dfrac{dy}{dt} = \\delta xy\u2212\\gamma y\\end{cases}$$ \u200b \u5176\u4e2d\uff0c x \u662f\u730e\u7269\u7684\u79cd\u7fa4\u5927\u5c0f\uff0c y \u662f\u6355\u98df\u8005\u7684\u79cd\u7fa4\u5927\u5c0f\uff0c t \u662f\u65f6\u95f4\uff0c \u03b1\u3001\u03b2\u3001\u03b4 \u548c \u03b3 \u662f\u63cf\u8ff0\u4e24\u4e2a\u7269\u79cd\u4e4b\u95f4\u4ea4\u4e92\u7684\u5e38\u91cf\u53c2\u6570\uff0c \u03b1 \u662f\u81ea\u7136\u589e\u957f\u7387\u3001\u03b2 \u662f\u81ea\u7136\u6b7b\u4ea1\u7387\uff0c \u03b3 \u662f\u730e\u7269\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u88ab\u730e\u98df\u8005\u6355\u83b7\u7684\u6bd4\u4f8b \u4ee4\uff1a $\u03b1=\u03b3=1\u3001\u03b2=0.01\u3001\u03b4=0.02$ \uff0c\u7f16\u5199\u51fd\u6570 Lotka.m \u5982\u4e0b\uff1a ```matlab function dpdt = Lotka(t,p) delta = 0.02; beta = 0.01; dpdt = [p(1) * (1 - beta p(2)); p(2) * (-1 + delta p(1))]; end ``` \u9488\u5bf9 \u4e0d\u540c \u521d\u59cb\u79cd\u7fa4\u5927\u5c0f\uff0c\u5047\u5b9a\u730e\u7269 x \u7684\u521d\u59cb\u79cd\u7fa4\u5927\u5c0f\u4fdd\u6301\u4e3a 50 \uff0c\u6539\u53d8\u6355\u98df\u8005 y \u7684\u521d\u59cb\u79cd\u7fa4\u5927\u5c0f\uff0c\u5728\u533a\u95f4 $[10:400]$ \u53d8\u5316\uff0c\u7ed8\u5236\u76f8\u4f4d\u56fe\u5982\u4e0b\uff1a exp \uff1a matlab t0 = 0; tfinal = 15; y0 = 10:10:400; for k = 1:length(y0) [t,p] = ode45(@Lotka,[t0 tfinal],[50 y0(k)]); plot(p(:,1),p(:,2)) hold on end title('Phase Plot of Predator/Prey Populations') xlabel('Prey') ylabel('Predators') hold off \u53d6\u79cd\u7fa4 x \uff0c y \u7684\u521d\u503c\u4e3a 50 \uff0c\u6bd4\u8f83 ode23 \u548c ode45 \u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\uff1a \u653e\u5927\u67e5\u770b\uff0c ode45 \u7684\u66f2\u7ebf\u66f4\u52a0\u5706\u6ed1 exp \uff1a matlab t0 = 0; tfinal = 15; p0 = [50; 50]; [t,p1] = ode23(@Lotka,[t0 tfinal],p0); [t,p2] = ode45(@Lotka,[t0 tfinal],p0); plot(p1(:,1),p1(:,2),'-o', p2(:,1),p2(:,2),'-.') title('Phase Plot of Predator/Prey Populations') legend('ode23','ode45') xlabel('Prey') ylabel('Predators') Seven \u00b6 Consider Rossler attractor (https://en.wikipedia.org/wiki/R%C3%B6ssler_attractor) with the defining equations, use MATLAB to develop the code to solve the Rossler attractor problem. The defining equations of the R\u00f6ssler system are \uff08\u7f57\u65af\u52d2\u7cfb\u7edf\u7684\u5b9a\u4e49\u65b9\u7a0b\u662f\uff1a\uff09 $$\\begin{cases}{\\frac {dx}{dt}}=-y-z \\end{cases}$$ $$\\begin{cases}{\\frac {dy}{dt}}=x+ay \\end{cases}$$ $$\\begin{cases}{\\frac {dz}{dt}}=b+z(x-c)\\end{cases}$$ \u9009\u62e9\u6807\u51c6\u53c2\u6570\u503c\uff0c\u4ee4 $a=0.2,b=0.2,c=5.7$ \uff0c\u7f16\u5199\u51fd\u6570 Rossler.m \u5982\u4e0b\uff1a ```matlab function dpdt = Rossler(t,p) a = 0.2; b = 0.2; c = 5.7; dpdt = [-p(2) - p(3); p(1) + a * p(2); b + p(3) * (p(1) - c);]; end ``` \u4ee4 x\u3001y\u3001z \u4e09\u8005\u7684\u521d\u503c\u4e3a 0 \uff0c\u89c2\u5bdf t \u5728\u533a\u95f4 $[0:400]$ \u4e0a\u7684\u53d8\u5316\uff0c\u5f97\u5230\u56fe\u50cf\u5982\u4e0b\uff1a exp \uff1a matlab t0 = 0; p0 = [0 0 0]; tfinal = 400; [t,p2] = ode45(@Rossler,[t0 tfinal],p0); plot3(p2(:,1),p2(:,2),p2(:,3)) \u4fdd\u6301 y\u3001z \u7684\u521d\u503c\u4e0d\u53d8\uff0c t \u5219\u9650\u5b9a\u5728\u533a\u95f4 $[0:10]$ \u4e0a\uff0c\u53d8\u5316 x \u7684\u521d\u503c\uff0c\u4f7f\u5176\u5728\u533a\u95f4 $[0:100]$ \u4e0a\u53d8\u5316\uff0c\u6bcf\u9694 10 \u8bb0\u5f55\u4e0b\u53d8\u5316\u65f6\u5f97\u5230\u7684\u66f2\u7ebf\uff0c\u5f97\u5230\u56fe\u50cf\u5982\u4e0b\uff1a exp \uff1a matlab t0 = 0; tfinal = 10; x0 = 0:10:100; figure(1); for k = 1:length(x0) [t,p1] = ode45(@Rossler,[t0 tfinal],[x0(k) 0 0]); plot3(p1(:,1),p1(:,2),p1(:,3)) hold on end xlabel('X') ylabel('Y') zlabel('Z') hold off \u4fdd\u6301\u5e38\u6570 $b=0.2\u3001c=5.7$ \uff0c\u66f4\u6539 a \u7684\u503c\u4e3a 3.8 \u548c 0.05 \uff0c\u89c2\u5bdf\u5230\uff0c $a=0.05$ \u65f6\uff0c\u51fd\u6570\u56fe\u50cf\u6536\u655b\u5230\u4e2d\u5fc3\uff0c $a=3.8$ \u65f6\uff0c\u660e\u663e\u7ebf\u6761\u53d8\u5f97\u66f4\u52a0\u6df7\u4e71\uff1a $a=0.05$ \uff1a $a=3.8$ \uff1a window.MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']], displayMath: [[\"$$\", \"$$\"], ['\\\\[', '\\\\]']], packages: { '[+]': ['mhchem'] } }, loader: { load: ['[tex]/mhchem'] }, }","title":"Assignment 1"},{"location":"Math_modeling/Assignment%201/#assignment-1","text":"","title":"Assignment 1"},{"location":"Math_modeling/Assignment%201/#one","text":"Please use the built-in MATLAB function ( dsolve ) to solve the $1^{st}$ order differential equation: $y\u2019(x) = xy$ . \u7528 eqn \u5b58\u50a8\u5fae\u5206\u65b9\u7a0b\u7684\u8868\u8fbe\u5f0f\uff0c\u76f4\u63a5\u7528 dsolve() \u51fd\u6570\u5f97\u5230\uff1a $y(x)= C1 \\times e^{\\frac{x^2}{2}}$ exp \uff1a matlab syms y(x) eqn = diff(y,x) == x*y; res = dsolve(eqn)","title":"One"},{"location":"Math_modeling/Assignment%201/#two","text":"Please solve the initial value problem, which is $y\u2019(x) = xy$ with $y(1) = 1$ . \u589e\u52a0\u53d8\u91cf con \uff0c\u5b58\u50a8 $y(1) = 1$ \uff0c\u4ee3\u5165 dsove() \u51fd\u6570\uff0c\u53ef\u4ee5\u6c42\u5f97\uff1a $y(x)= e^{-\\frac{1}{2}} \\times e^{\\frac{x^2}{2}}$ \u5373\uff0c $y(x)= e^{\\frac{x^2-1}{2}}$ exp \uff1a matlab syms y(x) eqn = diff(y,x) == x*y; con = y(1) == 1; y = dsolve(eqn,con) simy = simplify(y)","title":"Two"},{"location":"Math_modeling/Assignment%201/#three","text":"Please solve the $2^{nd}$ order differential equation: $y\u2019\u2019(x) + 8y\u2019(x) + 2y(x) = cos(x)$ with $y(0) = 0$ and $y\u2019(0) = 1$ . \u4ee4 $y''(x) = Dy$ \uff0c $y'(x) = D2y$ \uff0c eqn \u5b58\u50a8\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u8868\u8fbe\u5f0f\uff0c con1 \u548c con2 \u5206\u522b\u5b58\u50a8 $y(0) = 0$ \u548c $y\u2019(0) = 1$ \uff0c\u4ee3\u5165 dsove() \u51fd\u6570\uff0c\u6c42\u5f97\uff1a $y(x) = \\frac{1}{\\sqrt 65}sin(x + atan(\\frac{1}{8})) - \\frac{1}{1820}((14 - 53\\sqrt 14)e^{-(\\sqrt 14 + 4)x}+(-14 + 53\\sqrt 14)e^{(\\sqrt 14 - 4)x})$ exp \uff1a matlab syms y(x) Dy = diff(y,x); D2y = diff(Dy,x); eqn = D2y + 8 * Dy + 2 * y == cos(x); con1 = y(0) == 0; con2 = Dy(0) == 1; y = dsolve(eqn,con1,con2); simy = simplify(y)","title":"Three"},{"location":"Math_modeling/Assignment%201/#four","text":"Please solve the numerical solution of the 1st ode: y\u2019(x)=xy^2+y with y(0) = 1 and the x domain is [0, 0.5]. Try to use ode23 (https://www.mathworks.com/help/matlab/ref/ode23.html) and ode45 (https://www.mathworks.com/help/matlab/ref/ode45.html) respectively and compare the numerical results. ode23 \uff1a\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ode45 \uff1a Compare \uff1a exp \uff1a matlab xdomain = [0 0.5]; y_0 = 1; [x1,y1] = ode23(@(x1,y1) x1*y1^2+y1, xdomain, y_0); [x2,y2] = ode45(@(x2,y2) x2*y2^2+y2, xdomain, y_0); figure(1); plot(x1,y1,'-o') legend('y_ode23') figure(2); plot(x2,y2,'-.') legend('y_ode45') figure(3); plot(x1,y1,'-o',x2,y2,'-.') legend('y_ode23','y_ode45')","title":"Four"},{"location":"Math_modeling/Assignment%201/#five","text":"Solve the system of Lorenz equations (You may find this page very helpful with MATLAB/Python code: https://en.wikipedia.org/wiki/Lorenz_system). (1) Discuss the system behavior under the constant values: sigma, rho, and beta; (2) Comment the robustness of the dynamical system under different conditions. $${\\begin{aligned}{\\frac {\\mathrm {d} x}{\\mathrm {d} t}}=\\sigma (y-x),\\ {\\frac {\\mathrm {d}y}{\\mathrm {d}t}}=x(\\rho -z)-y,\\ {\\frac {\\mathrm {d} z}{\\mathrm {d} t}} =xy-\\beta z.\\end{aligned}}$$ \u53c2\u6570 \u03c3 \u79f0\u4e3a\u666e\u5170\u7279\u6570\uff0c \u03c1 \u662f\u89c4\u8303\u5316\u7684\u745e\u5229\u6570\uff0c \u03b2 \u548c\u51e0\u4f55\u5f62\u72b6\u76f8\u5173 \u4ee4 sigma = 10 \uff0c beta = 8/3 \uff0c rho = 13 \uff0c\u83b7\u5f97\u56fe\u50cf\uff1a \u4ee4 sigma = 10 \uff0c beta = 8/3 \uff0c rho = 160 \uff0c\u83b7\u5f97\u56fe\u50cf\uff1a \u4ee4 sigma = 10 \uff0c beta = 8/3 \uff0c rho = 28 \uff0c\u83b7\u5f97\u56fe\u50cf\uff1a exp \uff1a ```matlab sigma = 10; beta = 8/3; rho = 28; f = @(t,a) [-sigma a(1) + sigma a(2); rho a(1) - a(2) - a(1) a(3); -beta a(3) + a(1) a(2)]; [t,a] = ode45(f,[0 100],[1 1 1]); plot3(a(:,1),a(:,2),a(:,3)) ```","title":"Five"},{"location":"Math_modeling/Assignment%201/#six","text":"Consider Lotka-Volterra equations (https://en.wikipedia.org/wiki/Lotka%E2%80%93Volterra_equations), which is known as predatory-prey equations: (1) Plot the phase portrait; (2) Compare the results using ode23 and ode45. Lotka-Volterra \u65b9\u7a0b\u662f\u7531\u4e24\u4e2a\u4e00\u9636\u975e\u7ebf\u6027 ODE \u7ec4\u6210\u7684\u65b9\u7a0b\u7ec4\uff0c\u7528\u4e8e\u63cf\u8ff0\u751f\u7269\u7cfb\u7edf\u4e2d\u6355\u98df\u8005\u548c\u730e\u7269\u7684\u79cd\u7fa4\u3002\u79cd\u7fa4\u6839\u636e\u4ee5\u4e0b\u65b9\u7a0b\u7ec4\u968f\u65f6\u95f4\u53d8\u5316\uff1a $$\\begin{cases}\\dfrac{dx}{dt} = \\alpha x - \\beta xy \\ \\dfrac{dy}{dt} = \\delta xy\u2212\\gamma y\\end{cases}$$ \u200b \u5176\u4e2d\uff0c x \u662f\u730e\u7269\u7684\u79cd\u7fa4\u5927\u5c0f\uff0c y \u662f\u6355\u98df\u8005\u7684\u79cd\u7fa4\u5927\u5c0f\uff0c t \u662f\u65f6\u95f4\uff0c \u03b1\u3001\u03b2\u3001\u03b4 \u548c \u03b3 \u662f\u63cf\u8ff0\u4e24\u4e2a\u7269\u79cd\u4e4b\u95f4\u4ea4\u4e92\u7684\u5e38\u91cf\u53c2\u6570\uff0c \u03b1 \u662f\u81ea\u7136\u589e\u957f\u7387\u3001\u03b2 \u662f\u81ea\u7136\u6b7b\u4ea1\u7387\uff0c \u03b3 \u662f\u730e\u7269\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u88ab\u730e\u98df\u8005\u6355\u83b7\u7684\u6bd4\u4f8b \u4ee4\uff1a $\u03b1=\u03b3=1\u3001\u03b2=0.01\u3001\u03b4=0.02$ \uff0c\u7f16\u5199\u51fd\u6570 Lotka.m \u5982\u4e0b\uff1a ```matlab function dpdt = Lotka(t,p) delta = 0.02; beta = 0.01; dpdt = [p(1) * (1 - beta p(2)); p(2) * (-1 + delta p(1))]; end ``` \u9488\u5bf9 \u4e0d\u540c \u521d\u59cb\u79cd\u7fa4\u5927\u5c0f\uff0c\u5047\u5b9a\u730e\u7269 x \u7684\u521d\u59cb\u79cd\u7fa4\u5927\u5c0f\u4fdd\u6301\u4e3a 50 \uff0c\u6539\u53d8\u6355\u98df\u8005 y \u7684\u521d\u59cb\u79cd\u7fa4\u5927\u5c0f\uff0c\u5728\u533a\u95f4 $[10:400]$ \u53d8\u5316\uff0c\u7ed8\u5236\u76f8\u4f4d\u56fe\u5982\u4e0b\uff1a exp \uff1a matlab t0 = 0; tfinal = 15; y0 = 10:10:400; for k = 1:length(y0) [t,p] = ode45(@Lotka,[t0 tfinal],[50 y0(k)]); plot(p(:,1),p(:,2)) hold on end title('Phase Plot of Predator/Prey Populations') xlabel('Prey') ylabel('Predators') hold off \u53d6\u79cd\u7fa4 x \uff0c y \u7684\u521d\u503c\u4e3a 50 \uff0c\u6bd4\u8f83 ode23 \u548c ode45 \u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\uff1a \u653e\u5927\u67e5\u770b\uff0c ode45 \u7684\u66f2\u7ebf\u66f4\u52a0\u5706\u6ed1 exp \uff1a matlab t0 = 0; tfinal = 15; p0 = [50; 50]; [t,p1] = ode23(@Lotka,[t0 tfinal],p0); [t,p2] = ode45(@Lotka,[t0 tfinal],p0); plot(p1(:,1),p1(:,2),'-o', p2(:,1),p2(:,2),'-.') title('Phase Plot of Predator/Prey Populations') legend('ode23','ode45') xlabel('Prey') ylabel('Predators')","title":"Six"},{"location":"Math_modeling/Assignment%201/#seven","text":"Consider Rossler attractor (https://en.wikipedia.org/wiki/R%C3%B6ssler_attractor) with the defining equations, use MATLAB to develop the code to solve the Rossler attractor problem. The defining equations of the R\u00f6ssler system are \uff08\u7f57\u65af\u52d2\u7cfb\u7edf\u7684\u5b9a\u4e49\u65b9\u7a0b\u662f\uff1a\uff09 $$\\begin{cases}{\\frac {dx}{dt}}=-y-z \\end{cases}$$ $$\\begin{cases}{\\frac {dy}{dt}}=x+ay \\end{cases}$$ $$\\begin{cases}{\\frac {dz}{dt}}=b+z(x-c)\\end{cases}$$ \u9009\u62e9\u6807\u51c6\u53c2\u6570\u503c\uff0c\u4ee4 $a=0.2,b=0.2,c=5.7$ \uff0c\u7f16\u5199\u51fd\u6570 Rossler.m \u5982\u4e0b\uff1a ```matlab function dpdt = Rossler(t,p) a = 0.2; b = 0.2; c = 5.7; dpdt = [-p(2) - p(3); p(1) + a * p(2); b + p(3) * (p(1) - c);]; end ``` \u4ee4 x\u3001y\u3001z \u4e09\u8005\u7684\u521d\u503c\u4e3a 0 \uff0c\u89c2\u5bdf t \u5728\u533a\u95f4 $[0:400]$ \u4e0a\u7684\u53d8\u5316\uff0c\u5f97\u5230\u56fe\u50cf\u5982\u4e0b\uff1a exp \uff1a matlab t0 = 0; p0 = [0 0 0]; tfinal = 400; [t,p2] = ode45(@Rossler,[t0 tfinal],p0); plot3(p2(:,1),p2(:,2),p2(:,3)) \u4fdd\u6301 y\u3001z \u7684\u521d\u503c\u4e0d\u53d8\uff0c t \u5219\u9650\u5b9a\u5728\u533a\u95f4 $[0:10]$ \u4e0a\uff0c\u53d8\u5316 x \u7684\u521d\u503c\uff0c\u4f7f\u5176\u5728\u533a\u95f4 $[0:100]$ \u4e0a\u53d8\u5316\uff0c\u6bcf\u9694 10 \u8bb0\u5f55\u4e0b\u53d8\u5316\u65f6\u5f97\u5230\u7684\u66f2\u7ebf\uff0c\u5f97\u5230\u56fe\u50cf\u5982\u4e0b\uff1a exp \uff1a matlab t0 = 0; tfinal = 10; x0 = 0:10:100; figure(1); for k = 1:length(x0) [t,p1] = ode45(@Rossler,[t0 tfinal],[x0(k) 0 0]); plot3(p1(:,1),p1(:,2),p1(:,3)) hold on end xlabel('X') ylabel('Y') zlabel('Z') hold off \u4fdd\u6301\u5e38\u6570 $b=0.2\u3001c=5.7$ \uff0c\u66f4\u6539 a \u7684\u503c\u4e3a 3.8 \u548c 0.05 \uff0c\u89c2\u5bdf\u5230\uff0c $a=0.05$ \u65f6\uff0c\u51fd\u6570\u56fe\u50cf\u6536\u655b\u5230\u4e2d\u5fc3\uff0c $a=3.8$ \u65f6\uff0c\u660e\u663e\u7ebf\u6761\u53d8\u5f97\u66f4\u52a0\u6df7\u4e71\uff1a $a=0.05$ \uff1a $a=3.8$ \uff1a window.MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']], displayMath: [[\"$$\", \"$$\"], ['\\\\[', '\\\\]']], packages: { '[+]': ['mhchem'] } }, loader: { load: ['[tex]/mhchem'] }, }","title":"Seven"},{"location":"Math_modeling/Starting/","text":"Starting \u00b6 \u7f8e\u8d5b\u6570\u5b66\u5efa\u6a21\u5b66\u4e60","title":"Starting"},{"location":"Math_modeling/Starting/#starting","text":"\u7f8e\u8d5b\u6570\u5b66\u5efa\u6a21\u5b66\u4e60","title":"Starting"},{"location":"Scrips/Starting/","text":"Starting \u00b6 Python \u00b6 CTF \u505a\u9898\u3001\u51fa\u9898\u4e2d\u4f1a\u7528\u5230\u7684\uff0c\u4ee5\u53ca\u5176\u4ed6\u5199\u7684\u4e00\u4e9b\u811a\u672c Script \u00b6 \u81ea\u52a8\u5316\u914d\u7f6e\u51e0\u4e2a\u73af\u5883","title":"Starting"},{"location":"Scrips/Starting/#starting","text":"","title":"Starting"},{"location":"Scrips/Starting/#python","text":"CTF \u505a\u9898\u3001\u51fa\u9898\u4e2d\u4f1a\u7528\u5230\u7684\uff0c\u4ee5\u53ca\u5176\u4ed6\u5199\u7684\u4e00\u4e9b\u811a\u672c","title":"Python"},{"location":"Scrips/Starting/#script","text":"\u81ea\u52a8\u5316\u914d\u7f6e\u51e0\u4e2a\u73af\u5883","title":"Script"},{"location":"Scrips/CTF_quiz/Crypto/Multiple_Chaos_Maps/chaos/","text":"chaos \u00b6 import random import time from secret import flag def LC(x, times): xn = [] xn.append(x) xn.append(1 - alpha * xn[0]**2) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((1 - alpha * xn[i]**2)*(k1 * xn[i+1]**3 + (1 - k1)*xn[i+1])) return xn[times + 1] def CL(x, times): xn = [] xn.append(x) xn.append(k2 * xn[0]**3 + (1 - k2)*xn[0]) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((k2 * xn[i]**3 + (1 - k2)*xn[i])*(1 - alpha * xn[i+1]**2)) return xn[times + 1] def init(): global sum, r, alpha, k, k1, k2, a_1, timea1, b_1, timeb1, xc_1, yc_1 sum, r, alpha, k = 0, 1, 2, [] k1 = random.uniform(3.2, 4) k2 = random.uniform(3.2, 4) for i in range(16): k.append(random.randint(1,256)) sum += k[i] r ^= k[i] a_1 = (sum/256) % 1 timea1 = 3 + int(1000 * a_1) % 30 b_1 = (r/256) timeb1 = 3 + int(1000 * b_1) % 30 xc_1 = a_1 * b_1 yc_1 = (a_1 + b_1) % 1 print('k1, k2 = %r, %r'%(k1, k2)) print('k = %r'%(k)) def encrypt(flag): flag = list(flag) m, c = [], [] miu, omiga = [], [] ta = timea1 tb = timeb1 for tmp in flag: mi = ord(tmp) # m.append(mi) miu.append(LC(a_1, ta)) omiga.append(CL(b_1, tb)) c.append((int(miu[-1] * 1000) + int(omiga[-1] * 1000) + mi) % 256) delta = c[-1]/256 for i in range(3): y = (yc_1 + delta) % 1 y = k1 * y**3 + (1 - k1) * y x = xc_1 x = k2 * x**3 + (1 - k2) * x ta = 3 + int(1000 * x) % 30 tb = 3 + int(1000 * y) % 30 print('c = %r'%(c)) return c if __name__==\"__main__\": # print(flag) init() c = encrypt(flag) ''' k1, k2 = 3.748382978074769, 3.915306786433355 k = [157, 148, 123, 252, 219, 186, 81, 147, 42, 6, 160, 68, 73, 175, 150, 240] c = [193, 87, 75, 93, 131, 224, 92, 106, 85, 151, 93, 126, 203, 232, 101, 96, 41, 33, 32, 84, 100, 128, 23, 31, 118, 87, 29, 59, 77, 28, 36, 23, 45, 171, 38, 129, 94, 36, 100, 122, 104] '''","title":"chaos"},{"location":"Scrips/CTF_quiz/Crypto/Multiple_Chaos_Maps/chaos/#chaos","text":"import random import time from secret import flag def LC(x, times): xn = [] xn.append(x) xn.append(1 - alpha * xn[0]**2) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((1 - alpha * xn[i]**2)*(k1 * xn[i+1]**3 + (1 - k1)*xn[i+1])) return xn[times + 1] def CL(x, times): xn = [] xn.append(x) xn.append(k2 * xn[0]**3 + (1 - k2)*xn[0]) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((k2 * xn[i]**3 + (1 - k2)*xn[i])*(1 - alpha * xn[i+1]**2)) return xn[times + 1] def init(): global sum, r, alpha, k, k1, k2, a_1, timea1, b_1, timeb1, xc_1, yc_1 sum, r, alpha, k = 0, 1, 2, [] k1 = random.uniform(3.2, 4) k2 = random.uniform(3.2, 4) for i in range(16): k.append(random.randint(1,256)) sum += k[i] r ^= k[i] a_1 = (sum/256) % 1 timea1 = 3 + int(1000 * a_1) % 30 b_1 = (r/256) timeb1 = 3 + int(1000 * b_1) % 30 xc_1 = a_1 * b_1 yc_1 = (a_1 + b_1) % 1 print('k1, k2 = %r, %r'%(k1, k2)) print('k = %r'%(k)) def encrypt(flag): flag = list(flag) m, c = [], [] miu, omiga = [], [] ta = timea1 tb = timeb1 for tmp in flag: mi = ord(tmp) # m.append(mi) miu.append(LC(a_1, ta)) omiga.append(CL(b_1, tb)) c.append((int(miu[-1] * 1000) + int(omiga[-1] * 1000) + mi) % 256) delta = c[-1]/256 for i in range(3): y = (yc_1 + delta) % 1 y = k1 * y**3 + (1 - k1) * y x = xc_1 x = k2 * x**3 + (1 - k2) * x ta = 3 + int(1000 * x) % 30 tb = 3 + int(1000 * y) % 30 print('c = %r'%(c)) return c if __name__==\"__main__\": # print(flag) init() c = encrypt(flag) ''' k1, k2 = 3.748382978074769, 3.915306786433355 k = [157, 148, 123, 252, 219, 186, 81, 147, 42, 6, 160, 68, 73, 175, 150, 240] c = [193, 87, 75, 93, 131, 224, 92, 106, 85, 151, 93, 126, 203, 232, 101, 96, 41, 33, 32, 84, 100, 128, 23, 31, 118, 87, 29, 59, 77, 28, 36, 23, 45, 171, 38, 129, 94, 36, 100, 122, 104] '''","title":"chaos"},{"location":"Scrips/CTF_quiz/Crypto/Multiple_Chaos_Maps/exp/","text":"exp \u00b6 k1, k2 = 3.748382978074769, 3.915306786433355 k = [157, 148, 123, 252, 219, 186, 81, 147, 42, 6, 160, 68, 73, 175, 150, 240] c = [193, 87, 75, 93, 131, 224, 92, 106, 85, 151, 93, 126, 203, 232, 101, 96, 41, 33, 32, 84, 100, 128, 23, 31, 118, 87, 29, 59, 77, 28, 36, 23, 45, 171, 38, 129, 94, 36, 100, 122, 104] alpha = 2 sum, r = 0, 1 for i in range(16): sum += k[i] r ^= k[i] a_1 = (sum/256) % 1 timea1 = 3 + int(1000 * a_1) % 30 b_1 = (r/256) timeb1 = 3 + int(1000 * b_1) % 30 xc_1 = a_1 * b_1 yc_1 = (a_1 + b_1) % 1 def LC(x, times): xn = [] xn.append(x) xn.append(1 - alpha * xn[0]**2) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((1 - alpha * xn[i]**2)*(k1 * xn[i+1]**3 + (1 - k1)*xn[i+1])) return xn[times + 1] def CL(x, times): xn = [] xn.append(x) xn.append(k2 * xn[0]**3 + (1 - k2)*xn[0]) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((k2 * xn[i]**3 + (1 - k2)*xn[i])*(1 - alpha * xn[i+1]**2)) return xn[times + 1] def decrypt(c): m, miu, omiga = [], [], [] ta = timea1 tb = timeb1 for ci in c: miu.append(LC(a_1, ta)) omiga.append(CL(b_1, tb)) m.append(chr((ci - int(miu[-1] * 1000) - int(omiga[-1] * 1000)) % 256)) delta = ci/256 for i in range(3): y = (yc_1 + delta) % 1 y = k1 * y**3 + (1 - k1) * y x = xc_1 x = k2 * x**3 + (1 - k2) * x ta = 3 + int(1000 * x) % 30 tb = 3 + int(1000 * y) % 30 print(''.join(m)) decrypt(c)","title":"exp"},{"location":"Scrips/CTF_quiz/Crypto/Multiple_Chaos_Maps/exp/#exp","text":"k1, k2 = 3.748382978074769, 3.915306786433355 k = [157, 148, 123, 252, 219, 186, 81, 147, 42, 6, 160, 68, 73, 175, 150, 240] c = [193, 87, 75, 93, 131, 224, 92, 106, 85, 151, 93, 126, 203, 232, 101, 96, 41, 33, 32, 84, 100, 128, 23, 31, 118, 87, 29, 59, 77, 28, 36, 23, 45, 171, 38, 129, 94, 36, 100, 122, 104] alpha = 2 sum, r = 0, 1 for i in range(16): sum += k[i] r ^= k[i] a_1 = (sum/256) % 1 timea1 = 3 + int(1000 * a_1) % 30 b_1 = (r/256) timeb1 = 3 + int(1000 * b_1) % 30 xc_1 = a_1 * b_1 yc_1 = (a_1 + b_1) % 1 def LC(x, times): xn = [] xn.append(x) xn.append(1 - alpha * xn[0]**2) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((1 - alpha * xn[i]**2)*(k1 * xn[i+1]**3 + (1 - k1)*xn[i+1])) return xn[times + 1] def CL(x, times): xn = [] xn.append(x) xn.append(k2 * xn[0]**3 + (1 - k2)*xn[0]) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((k2 * xn[i]**3 + (1 - k2)*xn[i])*(1 - alpha * xn[i+1]**2)) return xn[times + 1] def decrypt(c): m, miu, omiga = [], [], [] ta = timea1 tb = timeb1 for ci in c: miu.append(LC(a_1, ta)) omiga.append(CL(b_1, tb)) m.append(chr((ci - int(miu[-1] * 1000) - int(omiga[-1] * 1000)) % 256)) delta = ci/256 for i in range(3): y = (yc_1 + delta) % 1 y = k1 * y**3 + (1 - k1) * y x = xc_1 x = k2 * x**3 + (1 - k2) * x ta = 3 + int(1000 * x) % 30 tb = 3 + int(1000 * y) % 30 print(''.join(m)) decrypt(c)","title":"exp"},{"location":"Scrips/CTF_quiz/Crypto/Random_predict/exp/","text":"exp \u00b6 from randcrack import RandCrack from Crypto.Cipher import AES from binascii import a2b_hex from libnum import s2n rc = RandCrack() f = open(\"msg.txt\", \"r\") old_key = b'73E5602B54FE63A5' old_iv = b'B435AE462FBAA662' clist = f.readlines() c = b'c82dc20b7512d03f1a0982eb8a6e855db20f6fe3ff8d202a6fb74c6522fa6e623c6abe6725cafe78f9624ad59f3e90af6f985f38f75ec4d62ff7e02bd7c2f051' def decrypt(text, key, iv): mode = AES.MODE_CBC cryptos = AES.new(key, mode, iv) plain_text = cryptos.decrypt(text) return plain_text for old_c in clist: m = decrypt(a2b_hex(old_c.strip('\\n')), old_key, old_iv) m = m.replace(b'\\0', b'') r = bin(int(m, 16))[2:].zfill(96) r1 = r[:32] r2 = r[32:64] r3 = r[64:] rc.submit(int(r2, 2)) rc.submit(int(r1, 2)) rc.submit(int(r3, 2)) salt = \"{:X}\".format(rc.predict_getrandbits(32)).encode('utf-8') key = \"{:X}\".format(rc.predict_getrandbits(64)).encode('utf-8') iv = \"{:X}\".format(rc.predict_getrandbits(64)).encode('utf-8') flag = decrypt(a2b_hex(c), key, iv).replace(b'\\0', b'') print(flag)","title":"exp"},{"location":"Scrips/CTF_quiz/Crypto/Random_predict/exp/#exp","text":"from randcrack import RandCrack from Crypto.Cipher import AES from binascii import a2b_hex from libnum import s2n rc = RandCrack() f = open(\"msg.txt\", \"r\") old_key = b'73E5602B54FE63A5' old_iv = b'B435AE462FBAA662' clist = f.readlines() c = b'c82dc20b7512d03f1a0982eb8a6e855db20f6fe3ff8d202a6fb74c6522fa6e623c6abe6725cafe78f9624ad59f3e90af6f985f38f75ec4d62ff7e02bd7c2f051' def decrypt(text, key, iv): mode = AES.MODE_CBC cryptos = AES.new(key, mode, iv) plain_text = cryptos.decrypt(text) return plain_text for old_c in clist: m = decrypt(a2b_hex(old_c.strip('\\n')), old_key, old_iv) m = m.replace(b'\\0', b'') r = bin(int(m, 16))[2:].zfill(96) r1 = r[:32] r2 = r[32:64] r3 = r[64:] rc.submit(int(r2, 2)) rc.submit(int(r1, 2)) rc.submit(int(r3, 2)) salt = \"{:X}\".format(rc.predict_getrandbits(32)).encode('utf-8') key = \"{:X}\".format(rc.predict_getrandbits(64)).encode('utf-8') iv = \"{:X}\".format(rc.predict_getrandbits(64)).encode('utf-8') flag = decrypt(a2b_hex(c), key, iv).replace(b'\\0', b'') print(flag)","title":"exp"},{"location":"Scrips/CTF_quiz/Crypto/Random_predict/task/","text":"task \u00b6 from Crypto.Cipher import AES from binascii import b2a_hex from libnum import s2n from random import * from secret import flag def add_to_16(text): if len(text.encode('utf-8')) % 16: add = 16 - (len(text.encode('utf-8')) % 16) else: add = 0 text = text + ('\\0' * add) return text.encode('utf-8') def init(): r1 = getrandbits(64) r2 = getrandbits(32) m = \"{:X}\".format(r1).encode('utf-8') salt = \"{:X}\".format(r2).encode('utf-8') m += salt return add_to_16(m.decode()) def encrypt(m, key, iv): mode = AES.MODE_CBC cryptos = AES.new(key, mode, iv) cipher_text = cryptos.encrypt(m) return cipher_text def chall(key, iv): old_m = init() c = encrypt(old_m, key, iv) return b2a_hex(c) if __name__==\"__main__\": f = open(\"msg.txt\", 'w+') old_key = b'73E5602B54FE63A5' old_iv = b'B435AE462FBAA662' for i in range(208): old_c = chall(old_key, old_iv) f.write(\"{}\\n\".format(old_c.decode())) salt = \"{:X}\".format(getrandbits(32)).encode('utf-8') m = flag.encode() + salt key = \"{:X}\".format(getrandbits(64)).encode('utf-8') iv = \"{:X}\".format(getrandbits(64)).encode('utf-8') c = encrypt(add_to_16(m.decode()), key, iv) print(\"c = %r\"%(b2a_hex(c))) # c = b'c82dc20b7512d03f1a0982eb8a6e855db20f6fe3ff8d202a6fb74c6522fa6e623c6abe6725cafe78f9624ad59f3e90af6f985f38f75ec4d62ff7e02bd7c2f051'","title":"task"},{"location":"Scrips/CTF_quiz/Crypto/Random_predict/task/#task","text":"from Crypto.Cipher import AES from binascii import b2a_hex from libnum import s2n from random import * from secret import flag def add_to_16(text): if len(text.encode('utf-8')) % 16: add = 16 - (len(text.encode('utf-8')) % 16) else: add = 0 text = text + ('\\0' * add) return text.encode('utf-8') def init(): r1 = getrandbits(64) r2 = getrandbits(32) m = \"{:X}\".format(r1).encode('utf-8') salt = \"{:X}\".format(r2).encode('utf-8') m += salt return add_to_16(m.decode()) def encrypt(m, key, iv): mode = AES.MODE_CBC cryptos = AES.new(key, mode, iv) cipher_text = cryptos.encrypt(m) return cipher_text def chall(key, iv): old_m = init() c = encrypt(old_m, key, iv) return b2a_hex(c) if __name__==\"__main__\": f = open(\"msg.txt\", 'w+') old_key = b'73E5602B54FE63A5' old_iv = b'B435AE462FBAA662' for i in range(208): old_c = chall(old_key, old_iv) f.write(\"{}\\n\".format(old_c.decode())) salt = \"{:X}\".format(getrandbits(32)).encode('utf-8') m = flag.encode() + salt key = \"{:X}\".format(getrandbits(64)).encode('utf-8') iv = \"{:X}\".format(getrandbits(64)).encode('utf-8') c = encrypt(add_to_16(m.decode()), key, iv) print(\"c = %r\"%(b2a_hex(c))) # c = b'c82dc20b7512d03f1a0982eb8a6e855db20f6fe3ff8d202a6fb74c6522fa6e623c6abe6725cafe78f9624ad59f3e90af6f985f38f75ec4d62ff7e02bd7c2f051'","title":"task"},{"location":"Scrips/CTF_quiz/Misc/Chaos_and_Pic/chaos/","text":"chaos \u00b6 import random import time from secret import flag def LC(x, times): xn = [] xn.append(x) xn.append(1 - alpha * xn[0]**2) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((1 - alpha * xn[i]**2)*(k1 * xn[i+1]**3 + (1 - k1)*xn[i+1])) return xn[times + 1] def CL(x, times): xn = [] xn.append(x) xn.append(k2 * xn[0]**3 + (1 - k2)*xn[0]) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((k2 * xn[i]**3 + (1 - k2)*xn[i])*(1 - alpha * xn[i+1]**2)) return xn[times + 1] def init(): global sum, r, alpha, k, k1, k2, a_1, timea1, b_1, timeb1, xc_1, yc_1 sum, r, alpha, k = 0, 1, 2, [] k1 = random.uniform(3.2, 4) k2 = random.uniform(3.2, 4) for i in range(16): k.append(random.randint(1,256)) sum += k[i] r ^= k[i] a_1 = (sum/256) % 1 timea1 = 3 + int(1000 * a_1) % 30 b_1 = (r/256) timeb1 = 3 + int(1000 * b_1) % 30 xc_1 = a_1 * b_1 yc_1 = (a_1 + b_1) % 1 print('k1, k2 = %r, %r'%(k1, k2)) print('k = %r'%(k)) def encrypt(flag): flag = list(flag) m, c = [], [] miu, omiga = [], [] ta = timea1 tb = timeb1 for tmp in flag: mi = ord(tmp) # m.append(mi) miu.append(LC(a_1, ta)) omiga.append(CL(b_1, tb)) c.append((int(miu[-1] * 1000) + int(omiga[-1] * 1000) + mi) % 256) delta = c[-1]/256 for i in range(3): y = (yc_1 + delta) % 1 y = k1 * y**3 + (1 - k1) * y x = xc_1 x = k2 * x**3 + (1 - k2) * x ta = 3 + int(1000 * x) % 30 tb = 3 + int(1000 * y) % 30 print('c = %r'%(c)) return c if __name__==\"__main__\": # print(flag) init() c = encrypt(flag) ''' k1, k2 = 3.748382978074769, 3.915306786433355 k = [157, 148, 123, 252, 219, 186, 81, 147, 42, 6, 160, 68, 73, 175, 150, 240] c = [193, 87, 75, 93, 131, 224, 92, 106, 85, 151, 93, 126, 203, 232, 101, 96, 41, 33, 32, 84, 100, 128, 23, 31, 118, 87, 29, 59, 77, 28, 36, 23, 45, 171, 38, 129, 94, 36, 100, 122, 104] '''","title":"chaos"},{"location":"Scrips/CTF_quiz/Misc/Chaos_and_Pic/chaos/#chaos","text":"import random import time from secret import flag def LC(x, times): xn = [] xn.append(x) xn.append(1 - alpha * xn[0]**2) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((1 - alpha * xn[i]**2)*(k1 * xn[i+1]**3 + (1 - k1)*xn[i+1])) return xn[times + 1] def CL(x, times): xn = [] xn.append(x) xn.append(k2 * xn[0]**3 + (1 - k2)*xn[0]) for i in range(times): assert xn[i]>=-1 and xn[i]<=1 and xn[i+1]>=-1 and xn[i+1]<=1 xn.append((k2 * xn[i]**3 + (1 - k2)*xn[i])*(1 - alpha * xn[i+1]**2)) return xn[times + 1] def init(): global sum, r, alpha, k, k1, k2, a_1, timea1, b_1, timeb1, xc_1, yc_1 sum, r, alpha, k = 0, 1, 2, [] k1 = random.uniform(3.2, 4) k2 = random.uniform(3.2, 4) for i in range(16): k.append(random.randint(1,256)) sum += k[i] r ^= k[i] a_1 = (sum/256) % 1 timea1 = 3 + int(1000 * a_1) % 30 b_1 = (r/256) timeb1 = 3 + int(1000 * b_1) % 30 xc_1 = a_1 * b_1 yc_1 = (a_1 + b_1) % 1 print('k1, k2 = %r, %r'%(k1, k2)) print('k = %r'%(k)) def encrypt(flag): flag = list(flag) m, c = [], [] miu, omiga = [], [] ta = timea1 tb = timeb1 for tmp in flag: mi = ord(tmp) # m.append(mi) miu.append(LC(a_1, ta)) omiga.append(CL(b_1, tb)) c.append((int(miu[-1] * 1000) + int(omiga[-1] * 1000) + mi) % 256) delta = c[-1]/256 for i in range(3): y = (yc_1 + delta) % 1 y = k1 * y**3 + (1 - k1) * y x = xc_1 x = k2 * x**3 + (1 - k2) * x ta = 3 + int(1000 * x) % 30 tb = 3 + int(1000 * y) % 30 print('c = %r'%(c)) return c if __name__==\"__main__\": # print(flag) init() c = encrypt(flag) ''' k1, k2 = 3.748382978074769, 3.915306786433355 k = [157, 148, 123, 252, 219, 186, 81, 147, 42, 6, 160, 68, 73, 175, 150, 240] c = [193, 87, 75, 93, 131, 224, 92, 106, 85, 151, 93, 126, 203, 232, 101, 96, 41, 33, 32, 84, 100, 128, 23, 31, 118, 87, 29, 59, 77, 28, 36, 23, 45, 171, 38, 129, 94, 36, 100, 122, 104] '''","title":"chaos"},{"location":"Scrips/CTF_scrips/Caser_%E7%88%86%E7%A0%B4/","text":"Caser_ \u7206\u7834 \u00b6 model = \"abcdefghijklmnopqrstuvwxyz\" model2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' str1 = \"AFFPGS{Unehxv_vf_AFF_FHCREZNA_fb_guvf_gnfx_vf_rnfl}\" for key in range(1,27): for s in str1: if s.islower(): n = model.find(s) s = model[n-key] elif s.isupper(): n = model2.find(s) s = model2[n-key] print(s, end='') print('')","title":"Caser_\u7206\u7834"},{"location":"Scrips/CTF_scrips/Caser_%E7%88%86%E7%A0%B4/#caser_","text":"model = \"abcdefghijklmnopqrstuvwxyz\" model2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' str1 = \"AFFPGS{Unehxv_vf_AFF_FHCREZNA_fb_guvf_gnfx_vf_rnfl}\" for key in range(1,27): for s in str1: if s.islower(): n = model.find(s) s = model[n-key] elif s.isupper(): n = model2.find(s) s = model2[n-key] print(s, end='') print('')","title":"Caser_\u7206\u7834"},{"location":"Scrips/CTF_scrips/RSA_%E5%B8%B8%E8%A7%81/","text":"RSA_ \u5e38\u89c1 \u00b6 #coding:utf-8 import gmpy2,libnum from Crypto.PublicKey import RSA from Crypto.Util.number import bytes_to_long def egcd(a,b): if a==0: return(b,0,1) else: g,y,x=egcd(b%a,a) return(g,x-(b // a)*y,y) def extended_gcd(a, b): x,y = 0, 1 lastx, lasty = 1, 0 while b: a, (q, b) = b, divmod(a,b) x, lastx = lastx-q*x, x y, lasty = lasty-q*y, y return (lastx, lasty, a) def CRT(items):#\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 N = 1 for a, n in items: N *= n result = 0 for a, n in items: m = N//n r, s, d = extended_gcd(n, m) if d != 1: N=N//n continue result += a*s*m return result % N, N def p_q_e(): p=int(input(\"p=\")) q=int(input(\"q=\")) e=int(input(\"e=\")) c=int(input(\"c=\")) phi=(p-1)*(q-1) n=p*q d=gmpy2.invert(e,phi) m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def Common_Modulus(): n=int(input(\"n=\")) e1=int(input(\"e1=\")) c1=int(input(\"c1=\")) e2=int(input(\"e2=\")) c2=int(input(\"c2=\")) s=egcd(e1,e2) s1=s[1] s2=s[2] # \u6c42\u6a21\u53cd\u5143\u7d20 if s1<0: s1 = - s1 c1 = gmpy2.invert(c1,n) elif s2<0: s2 = - s2 c2 = gmpy2.invert(c2,n) m = pow(c1,s1,n)*pow(c2,s2,n)%n print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def Small_plaintext_e3(): e=int(input(\"e=\")) n=int(input(\"n=\")) c=int(input(\"c=\")) for k in range(200000000): if gmpy2.iroot(c + n * k, e)[1] == 1: m=gmpy2.iroot(c + n * k, e)[0] print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) break def n_e_dp(): n=int(input(\"n=\")) e=int(input(\"e=\")) dp=int(input(\"dp=\")) c=int(input(\"c=\")) for i in range(1,65538): if (dp*e-1)%i == 0: if n%(((dp*e-1)//i)+1)==0: p=((dp*e-1)//i)+1 q=n//p phi = (p-1)*(q-1) d = gmpy2.invert(e,phi)%phi print(libnum.n2s(pow(c,d,n))) def N2_equal_P(): n1=int(input(\"n1=\")) n2=int(input(\"n2=\")) e1=int(input(\"e1=\")) e2=int(input(\"e2=\")) c1=int(input(\"c1=\")) c2=int(input(\"c2=\")) p=gmpy2.gcd(n1,n2) #print(p) q1=n1//p q2=n2//p phi_1=(p-1)*(q1-1) phi_2=(p-1)*(q2-1) d1=gmpy2.invert(e1,phi_1) d2=gmpy2.invert(e2,phi_2) print(\"m1\uff1a\",libnum.n2s(pow(c1,d1,n1))) print(\"m2\uff1a\",libnum.n2s(pow(c2,d2,n2))) def Prime_3(): p=int(input(\"p=\")) q=int(input(\"q=\")) r=int(input(\"r=\")) e=int(input(\"e=\")) c=int(input(\"c=\")) s=(p-1)*(q-1)*(r-1) d=(gmpy2.invert(e, s)) n=p*q*r m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def RSA_File(): public_name = input(\"\u8bf7\u8f93\u5165\u516c\u94a5\u6587\u4ef6\u540d(\u6ca1\u6709\u76f4\u63a5\u56de\u8f66)\uff1a\") flag_name = input(\"\u8bf7\u8f93\u5165\u52a0\u5bc6\u6587\u4ef6\u540d\uff1a\") private_name = input(\"\u8bf7\u8f93\u5165\u79c1\u94a5\u6587\u4ef6\u540d(\u6ca1\u6709\u76f4\u63a5\u56de\u8f66)\uff1a\") with open(flag_name,'rb') as f: c = bytes_to_long(f.read()) if private_name==\"\": pass else: with open(private_name,'r') as private: Key = RSA.importKey(private.read()) n,e,d,p,q=Key.n,Key.e,Key.d,Key.p,Key.q m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) return with open(public_name,'r') as public: key = RSA.importKey(public.read()) n, e = key.n, key.e print(\"n=\",n) print(\"e=\",e) print(\"c=\",c) def next_prime(): n=int(input(\"n=\")) e=int(input(\"e=\")) c=int(input(\"c=\")) i = gmpy2.isqrt(n) p, q = 0, 0 while True: if n - (i * (n // i)) == 0: p = i q = n//i break i += 1 phi=(p-1)*(q-1) d=gmpy2.invert(e,phi) m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def Broadcast(): print('n,e,c\u7531\u6587\u4ef6\u5bfc\u5165\uff0c\u8bf7\u786e\u4fdd\u683c\u5f0f\u4e3a[{\"c\": , \"e\": , \"n\":}]') print(\"\u4e0d\u540c\u7ec4\u7528\u9017\u53f7\u9694\u5f00\uff0c\u5982[{},{}]\") file_name=input(\"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d\uff1a\") with open(file_name,'r') as f: f=f.read() sessions=eval(f) data = [] for session in sessions: e=session['e'] n=session['n'] msg=session['c'] data = data + [(msg, n)] print(\"Please wait, performing CRT\") x, n = CRT(data) e=session['e'] m=gmpy2.iroot(x,e)[0] print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) if __name__==\"__main__\": print(\"1.\u5df2\u77e5p,q,e\") print(\"2.\u5171\u6a21\u653b\u51fb\") print(\"3.\u5c0f\u660e\u6587\u653b\u51fb\uff0ce\u4e00\u822c\u4e3a3\") print(\"4.\u5df2\u77e5n,e,dp\") print(\"5.\u6a21\u4e0d\u4e92\u7d20\uff0c\u6c42\u51fa\u5171\u56e0\u5b50p\") print(\"6.\u4e09\u4e2a\u7d20\u6570\u7684RSA\") print(\"7.\u8bfb\u53d6RSA\u516c\u94a5\u6587\u4ef6\uff0c\u79c1\u94a5\u6587\u4ef6\u548c\u5bc6\u6587\") print(\"8.p,q\u76f8\u8fd1\") print(\"9.\u4f4e\u52a0\u5bc6\u6307\u6570\u5e7f\u64ad\u653b\u51fb\") x=input(\"\u8bf7\u9009\u62e9\u89e3\u5bc6\u65b9\u6cd5\uff1a\") if x=='1': p_q_e() if x=='2': Common_Modulus() if x=='3': Small_plaintext_e3() if x=='4': n_e_dp() if x=='5': N2_equal_P() if x=='6': Prime_3() if x=='7': RSA_File() if x=='8': next_prime() if x=='9': Broadcast()","title":"RSA_\u5e38\u89c1"},{"location":"Scrips/CTF_scrips/RSA_%E5%B8%B8%E8%A7%81/#rsa_","text":"#coding:utf-8 import gmpy2,libnum from Crypto.PublicKey import RSA from Crypto.Util.number import bytes_to_long def egcd(a,b): if a==0: return(b,0,1) else: g,y,x=egcd(b%a,a) return(g,x-(b // a)*y,y) def extended_gcd(a, b): x,y = 0, 1 lastx, lasty = 1, 0 while b: a, (q, b) = b, divmod(a,b) x, lastx = lastx-q*x, x y, lasty = lasty-q*y, y return (lastx, lasty, a) def CRT(items):#\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 N = 1 for a, n in items: N *= n result = 0 for a, n in items: m = N//n r, s, d = extended_gcd(n, m) if d != 1: N=N//n continue result += a*s*m return result % N, N def p_q_e(): p=int(input(\"p=\")) q=int(input(\"q=\")) e=int(input(\"e=\")) c=int(input(\"c=\")) phi=(p-1)*(q-1) n=p*q d=gmpy2.invert(e,phi) m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def Common_Modulus(): n=int(input(\"n=\")) e1=int(input(\"e1=\")) c1=int(input(\"c1=\")) e2=int(input(\"e2=\")) c2=int(input(\"c2=\")) s=egcd(e1,e2) s1=s[1] s2=s[2] # \u6c42\u6a21\u53cd\u5143\u7d20 if s1<0: s1 = - s1 c1 = gmpy2.invert(c1,n) elif s2<0: s2 = - s2 c2 = gmpy2.invert(c2,n) m = pow(c1,s1,n)*pow(c2,s2,n)%n print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def Small_plaintext_e3(): e=int(input(\"e=\")) n=int(input(\"n=\")) c=int(input(\"c=\")) for k in range(200000000): if gmpy2.iroot(c + n * k, e)[1] == 1: m=gmpy2.iroot(c + n * k, e)[0] print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) break def n_e_dp(): n=int(input(\"n=\")) e=int(input(\"e=\")) dp=int(input(\"dp=\")) c=int(input(\"c=\")) for i in range(1,65538): if (dp*e-1)%i == 0: if n%(((dp*e-1)//i)+1)==0: p=((dp*e-1)//i)+1 q=n//p phi = (p-1)*(q-1) d = gmpy2.invert(e,phi)%phi print(libnum.n2s(pow(c,d,n))) def N2_equal_P(): n1=int(input(\"n1=\")) n2=int(input(\"n2=\")) e1=int(input(\"e1=\")) e2=int(input(\"e2=\")) c1=int(input(\"c1=\")) c2=int(input(\"c2=\")) p=gmpy2.gcd(n1,n2) #print(p) q1=n1//p q2=n2//p phi_1=(p-1)*(q1-1) phi_2=(p-1)*(q2-1) d1=gmpy2.invert(e1,phi_1) d2=gmpy2.invert(e2,phi_2) print(\"m1\uff1a\",libnum.n2s(pow(c1,d1,n1))) print(\"m2\uff1a\",libnum.n2s(pow(c2,d2,n2))) def Prime_3(): p=int(input(\"p=\")) q=int(input(\"q=\")) r=int(input(\"r=\")) e=int(input(\"e=\")) c=int(input(\"c=\")) s=(p-1)*(q-1)*(r-1) d=(gmpy2.invert(e, s)) n=p*q*r m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def RSA_File(): public_name = input(\"\u8bf7\u8f93\u5165\u516c\u94a5\u6587\u4ef6\u540d(\u6ca1\u6709\u76f4\u63a5\u56de\u8f66)\uff1a\") flag_name = input(\"\u8bf7\u8f93\u5165\u52a0\u5bc6\u6587\u4ef6\u540d\uff1a\") private_name = input(\"\u8bf7\u8f93\u5165\u79c1\u94a5\u6587\u4ef6\u540d(\u6ca1\u6709\u76f4\u63a5\u56de\u8f66)\uff1a\") with open(flag_name,'rb') as f: c = bytes_to_long(f.read()) if private_name==\"\": pass else: with open(private_name,'r') as private: Key = RSA.importKey(private.read()) n,e,d,p,q=Key.n,Key.e,Key.d,Key.p,Key.q m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) return with open(public_name,'r') as public: key = RSA.importKey(public.read()) n, e = key.n, key.e print(\"n=\",n) print(\"e=\",e) print(\"c=\",c) def next_prime(): n=int(input(\"n=\")) e=int(input(\"e=\")) c=int(input(\"c=\")) i = gmpy2.isqrt(n) p, q = 0, 0 while True: if n - (i * (n // i)) == 0: p = i q = n//i break i += 1 phi=(p-1)*(q-1) d=gmpy2.invert(e,phi) m=pow(c,d,n) print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) def Broadcast(): print('n,e,c\u7531\u6587\u4ef6\u5bfc\u5165\uff0c\u8bf7\u786e\u4fdd\u683c\u5f0f\u4e3a[{\"c\": , \"e\": , \"n\":}]') print(\"\u4e0d\u540c\u7ec4\u7528\u9017\u53f7\u9694\u5f00\uff0c\u5982[{},{}]\") file_name=input(\"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d\uff1a\") with open(file_name,'r') as f: f=f.read() sessions=eval(f) data = [] for session in sessions: e=session['e'] n=session['n'] msg=session['c'] data = data + [(msg, n)] print(\"Please wait, performing CRT\") x, n = CRT(data) e=session['e'] m=gmpy2.iroot(x,e)[0] print(\"\u660e\u6587\uff1a\",libnum.n2s(m)) if __name__==\"__main__\": print(\"1.\u5df2\u77e5p,q,e\") print(\"2.\u5171\u6a21\u653b\u51fb\") print(\"3.\u5c0f\u660e\u6587\u653b\u51fb\uff0ce\u4e00\u822c\u4e3a3\") print(\"4.\u5df2\u77e5n,e,dp\") print(\"5.\u6a21\u4e0d\u4e92\u7d20\uff0c\u6c42\u51fa\u5171\u56e0\u5b50p\") print(\"6.\u4e09\u4e2a\u7d20\u6570\u7684RSA\") print(\"7.\u8bfb\u53d6RSA\u516c\u94a5\u6587\u4ef6\uff0c\u79c1\u94a5\u6587\u4ef6\u548c\u5bc6\u6587\") print(\"8.p,q\u76f8\u8fd1\") print(\"9.\u4f4e\u52a0\u5bc6\u6307\u6570\u5e7f\u64ad\u653b\u51fb\") x=input(\"\u8bf7\u9009\u62e9\u89e3\u5bc6\u65b9\u6cd5\uff1a\") if x=='1': p_q_e() if x=='2': Common_Modulus() if x=='3': Small_plaintext_e3() if x=='4': n_e_dp() if x=='5': N2_equal_P() if x=='6': Prime_3() if x=='7': RSA_File() if x=='8': next_prime() if x=='9': Broadcast()","title":"RSA_\u5e38\u89c1"},{"location":"Scrips/CTF_scrips/SHA256_%E9%AA%8C%E8%AF%81%E7%A0%81%E7%88%86%E7%A0%B4/","text":"SHA256_ \u9a8c\u8bc1\u7801\u7206\u7834 \u00b6 import string import hashlib import itertools sha256enc=\"a8c0939f9abe212c5fa3714d317212a9ef52a6c5b8fff4a6e4ae1cec851fe370\" key=\"NSkpCmlLih6f0f0s\" code = '' strlist = itertools.product(string.ascii_letters + string.digits, repeat=1) for i in strlist: code = i[0]#[0] + i[1] + i[2] + i[3] print(code) encinfo = hashlib.sha256(code + key).hexdigest() if encinfo == sha256enc: print(code) break","title":"SHA256_\u9a8c\u8bc1\u7801\u7206\u7834"},{"location":"Scrips/CTF_scrips/SHA256_%E9%AA%8C%E8%AF%81%E7%A0%81%E7%88%86%E7%A0%B4/#sha256_","text":"import string import hashlib import itertools sha256enc=\"a8c0939f9abe212c5fa3714d317212a9ef52a6c5b8fff4a6e4ae1cec851fe370\" key=\"NSkpCmlLih6f0f0s\" code = '' strlist = itertools.product(string.ascii_letters + string.digits, repeat=1) for i in strlist: code = i[0]#[0] + i[1] + i[2] + i[3] print(code) encinfo = hashlib.sha256(code + key).hexdigest() if encinfo == sha256enc: print(code) break","title":"SHA256_\u9a8c\u8bc1\u7801\u7206\u7834"},{"location":"Scrips/CTF_scrips/base64_%E5%A4%9A%E8%A1%8C/","text":"base64_ \u591a\u884c \u00b6 import base64 def base64stego_decrypt(lines): base64char = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" #Base64\u5b57\u7b26\u96c6 \u5df2\u6309\u7167\u89c4\u8303\u6392\u5217 bintext = \"\" for line in lines: if line.find(\"==\") > 0: tmp = bin(base64char.find(line[-3]) & 15)[2:] bintext = bintext+\"0\"*(4-len(tmp))+tmp elif line.find(\"=\") > 0: tmp = bin(base64char.find(line[-2]) & 3)[2:] bintext = bintext+\"0\"*(2-len(tmp))+tmp text = \"\" if(len(bintext) % 8 != 0): print(\"error\") for i in range(0, len(bintext), 8): if(i+8 > len(bintext)): text = text+\"-\"+bintext[i:] return text else: text = text+chr(int(bintext[i:i+8], 2)) else: for i in range(0, len(bintext), 8): text = text+chr(int(bintext[i:i+8], 2)) return text def base64string_decrypt(text): try: detext = str(text).encode(\"utf-8\") detext = base64.b64decode(detext) detext = detext.decode(\"utf-8\") except: return 0 return detext if __name__ == \"__main__\": path = \"flag.txt\" file = open(path, \"r\") line = file.read().splitlines() print(\"\u663e\uff1a\", end=\"\") for l in line: print(base64string_decrypt(l),end=\"\") print() print(\"\u9690\uff1a\", base64stego_decrypt(line))","title":"base64_\u591a\u884c"},{"location":"Scrips/CTF_scrips/base64_%E5%A4%9A%E8%A1%8C/#base64_","text":"import base64 def base64stego_decrypt(lines): base64char = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" #Base64\u5b57\u7b26\u96c6 \u5df2\u6309\u7167\u89c4\u8303\u6392\u5217 bintext = \"\" for line in lines: if line.find(\"==\") > 0: tmp = bin(base64char.find(line[-3]) & 15)[2:] bintext = bintext+\"0\"*(4-len(tmp))+tmp elif line.find(\"=\") > 0: tmp = bin(base64char.find(line[-2]) & 3)[2:] bintext = bintext+\"0\"*(2-len(tmp))+tmp text = \"\" if(len(bintext) % 8 != 0): print(\"error\") for i in range(0, len(bintext), 8): if(i+8 > len(bintext)): text = text+\"-\"+bintext[i:] return text else: text = text+chr(int(bintext[i:i+8], 2)) else: for i in range(0, len(bintext), 8): text = text+chr(int(bintext[i:i+8], 2)) return text def base64string_decrypt(text): try: detext = str(text).encode(\"utf-8\") detext = base64.b64decode(detext) detext = detext.decode(\"utf-8\") except: return 0 return detext if __name__ == \"__main__\": path = \"flag.txt\" file = open(path, \"r\") line = file.read().splitlines() print(\"\u663e\uff1a\", end=\"\") for l in line: print(base64string_decrypt(l),end=\"\") print() print(\"\u9690\uff1a\", base64stego_decrypt(line))","title":"base64_\u591a\u884c"},{"location":"Scrips/CTF_scrips/secret/","text":"secret \u00b6 import string import secrets import re alphabet = string.ascii_lowercase + string.digits password = ''.join(secrets.choice(alphabet) for i in range(32)) st2 = re.findall(r'.{8}', password) flag = 'flag{' + ('-'.join(s for s in st2)) + '}' # print(flag)","title":"secret"},{"location":"Scrips/CTF_scrips/secret/#secret","text":"import string import secrets import re alphabet = string.ascii_lowercase + string.digits password = ''.join(secrets.choice(alphabet) for i in range(32)) st2 = re.findall(r'.{8}', password) flag = 'flag{' + ('-'.join(s for s in st2)) + '}' # print(flag)","title":"secret"},{"location":"Scrips/CTF_scrips/wave_%E9%9F%B3%E9%A2%91%E5%A4%84%E7%90%86/","text":"wave_ \u97f3\u9891\u5904\u7406 \u00b6 import wave import struct with wave.open(\"c.wav\", \"rb\") as c: with wave.open(\"a.wav\", \"wb\") as a: a.setnchannels(1) a.setsampwidth(2) a.setframerate(44100) for i in range(c.getnframes()): print(i) L, R = struct.unpack('hh', c.readframes(1)) data = L + R a_data = struct.pack('h', data) a.writeframes(a_data)","title":"wave_\u97f3\u9891\u5904\u7406"},{"location":"Scrips/CTF_scrips/wave_%E9%9F%B3%E9%A2%91%E5%A4%84%E7%90%86/#wave_","text":"import wave import struct with wave.open(\"c.wav\", \"rb\") as c: with wave.open(\"a.wav\", \"wb\") as a: a.setnchannels(1) a.setsampwidth(2) a.setframerate(44100) for i in range(c.getnframes()): print(i) L, R = struct.unpack('hh', c.readframes(1)) data = L + R a_data = struct.pack('h', data) a.writeframes(a_data)","title":"wave_\u97f3\u9891\u5904\u7406"},{"location":"Scrips/CTF_scrips/%E6%89%8B%E6%9C%BA%E9%94%AE%E7%9B%98%E5%AF%86%E7%A0%81/","text":"\u624b\u673a\u952e\u76d8\u5bc6\u7801 \u00b6 # \u624b\u673a\u952e\u76d8\u5bc6\u7801 import re DIC = [\"\", \"\", \" abc\", \" def\", \" ghi\", \" jkl\", \" mno\", \" pqrs\", \" tuv\", \" wxyz\"] def encrypt_p_keyboard(string): ciphertext = \"\" string = string.replace(\" \", \"\") for i in string: for j in DIC: if i in j: ciphertext += str(DIC.index(j)) + str(j.index(i)) + \" \" break else: return -1 return ciphertext[:-1] def decrypt_p_keyboard(string): plaintext = \"\" string = string.replace(\" \", \"\") test = re.findall(\"\\d+\", string) if not test or test[0] != string: return -1 ciphertext_lis = re.findall(\"\\d{2}\", string) try: for i in ciphertext_lis: plaintext += DIC[int(i[0])][int(i[1])] except: return -1 return plaintext if __name__ == '__main__': # ciphertext_ = encrypt_p_keyboard(\"keyboard\") ciphertext_ = \"43 62 23 63 61 71 73 32 74 74 43 22 53 32\" plaintext_ = decrypt_p_keyboard(ciphertext_) print(f\"{plaintext_}: {ciphertext_}\")","title":"\u624b\u673a\u952e\u76d8\u5bc6\u7801"},{"location":"Scrips/CTF_scrips/%E6%89%8B%E6%9C%BA%E9%94%AE%E7%9B%98%E5%AF%86%E7%A0%81/#_1","text":"# \u624b\u673a\u952e\u76d8\u5bc6\u7801 import re DIC = [\"\", \"\", \" abc\", \" def\", \" ghi\", \" jkl\", \" mno\", \" pqrs\", \" tuv\", \" wxyz\"] def encrypt_p_keyboard(string): ciphertext = \"\" string = string.replace(\" \", \"\") for i in string: for j in DIC: if i in j: ciphertext += str(DIC.index(j)) + str(j.index(i)) + \" \" break else: return -1 return ciphertext[:-1] def decrypt_p_keyboard(string): plaintext = \"\" string = string.replace(\" \", \"\") test = re.findall(\"\\d+\", string) if not test or test[0] != string: return -1 ciphertext_lis = re.findall(\"\\d{2}\", string) try: for i in ciphertext_lis: plaintext += DIC[int(i[0])][int(i[1])] except: return -1 return plaintext if __name__ == '__main__': # ciphertext_ = encrypt_p_keyboard(\"keyboard\") ciphertext_ = \"43 62 23 63 61 71 73 32 74 74 43 22 53 32\" plaintext_ = decrypt_p_keyboard(ciphertext_) print(f\"{plaintext_}: {ciphertext_}\")","title":"\u624b\u673a\u952e\u76d8\u5bc6\u7801"},{"location":"Scrips/Setup/Docker_Ubuntu1804/","text":"Docker_Ubuntu1804 \u00b6 #!/bin/bash act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } if [ ! -f \"install.sh\" ]; then act \"apt-get update && apt-get upgrade -y && apt install vim -y\" act \"apt install sudo\" && echo -e \"\\033[32msudo\\033[0m \\033[33mis successfully installed\\033[0m\" || echo -e \"\\033[31mfail\\033[0m to install \\033[35msudo\\033[0m\" act \"sudo apt install iputils-ping -y\" act \"sudo apt install net-tools\" act \"sudo apt install wget -y\" act \"sudo apt install python3 -y\" act \"sudo apt install python3-pip -y\" act \"sudo apt install curl -y\" act \"echo \\\"140.82.112.3 github.com\\\" >> /etc/hosts\" act \"echo \\\"199.232.68.133 raw.githubusercontent.com\\\" >> /etc/hosts\" echo -e \"\\033[33m(+)\\033[0m \\033[32mrunning\\033[0m \\033[36mUbuntu_zsh.sh\\033[0m...\" bash -c \"$(curl -fsSL https://github.com/noneSycamore/script_sh/releases/download/0.2/Ubuntu_zsh.sh)\" else echo -e \"\\033[33m(+)\\033[0m \\033[36minstall.sh\\033[0m has \\033[32malready\\033[0m been download\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-completions \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions\" act \"fpath+=\\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-autosuggestions\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git \\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\" act \"sed -i '/^plugins=(.*/c plugins=(git zsh-autosuggestions zsh-syntax-highlighting)' ~/.zshrc\" echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m install & configure \\033[32msucceed\\033[0m\" echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh theme\\033[0m \\033[35mpowerlevel10k\\033[0m install \\033[32mstarting...\\033[0m\" act \"git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \\${ZSH_CUSTOM:-\\$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\" act \"sed -i '/^ZSH_THEME=.*/c ZSH_THEME=\\\"powerlevel10k/powerlevel10k\\\"' ~/.zshrc\" act \"rm install.sh\" act \"exec zsh\" fi echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install & configure \\033[32msucceed\\033[0m\" exit","title":"Docker_Ubuntu1804"},{"location":"Scrips/Setup/Docker_Ubuntu1804/#docker_ubuntu1804","text":"#!/bin/bash act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } if [ ! -f \"install.sh\" ]; then act \"apt-get update && apt-get upgrade -y && apt install vim -y\" act \"apt install sudo\" && echo -e \"\\033[32msudo\\033[0m \\033[33mis successfully installed\\033[0m\" || echo -e \"\\033[31mfail\\033[0m to install \\033[35msudo\\033[0m\" act \"sudo apt install iputils-ping -y\" act \"sudo apt install net-tools\" act \"sudo apt install wget -y\" act \"sudo apt install python3 -y\" act \"sudo apt install python3-pip -y\" act \"sudo apt install curl -y\" act \"echo \\\"140.82.112.3 github.com\\\" >> /etc/hosts\" act \"echo \\\"199.232.68.133 raw.githubusercontent.com\\\" >> /etc/hosts\" echo -e \"\\033[33m(+)\\033[0m \\033[32mrunning\\033[0m \\033[36mUbuntu_zsh.sh\\033[0m...\" bash -c \"$(curl -fsSL https://github.com/noneSycamore/script_sh/releases/download/0.2/Ubuntu_zsh.sh)\" else echo -e \"\\033[33m(+)\\033[0m \\033[36minstall.sh\\033[0m has \\033[32malready\\033[0m been download\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-completions \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions\" act \"fpath+=\\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-autosuggestions\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git \\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\" act \"sed -i '/^plugins=(.*/c plugins=(git zsh-autosuggestions zsh-syntax-highlighting)' ~/.zshrc\" echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m install & configure \\033[32msucceed\\033[0m\" echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh theme\\033[0m \\033[35mpowerlevel10k\\033[0m install \\033[32mstarting...\\033[0m\" act \"git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \\${ZSH_CUSTOM:-\\$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\" act \"sed -i '/^ZSH_THEME=.*/c ZSH_THEME=\\\"powerlevel10k/powerlevel10k\\\"' ~/.zshrc\" act \"rm install.sh\" act \"exec zsh\" fi echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install & configure \\033[32msucceed\\033[0m\" exit","title":"Docker_Ubuntu1804"},{"location":"Scrips/Setup/Library_readin/","text":"import os path = \"docs\" files = os.listdir(path) str = '' def floder(files1, i, p): global str for file1 in files1: if '.' in file1: str += ' ' i+'- '+p+file1+'\\n' else: str += ' ' i+'- '+file1+':\\n' files2 = os.listdir(path+'/'+p+file1) p2=p+file1+'/' floder(files2, i+1, p2) for file in files: if '.' in file or file == 'images': continue else: str += ' - ' + file + ':\\n' files2 = os.listdir(path+'/'+file) str += ' - ' + file+'/'+'Starting.md' + '\\n' for file2 in files2: if '.' in file2 and file2 != 'Starting.md': str += ' - ' + file+'/'+file2 + '\\n' elif file2 != 'Starting.md': str += ' - ' + file2 + ':\\n' files3 = os.listdir(path+'/'+file+'/'+file2) p = file+'/'+file2+'/' floder(files3, 3, p) print(str) f = open(\"mkdocs.yml\", 'r+', encoding=\"utf-8\") line = f.readline() while line: if 'index.md' in line: pos = f.tell() break line = f.readline() f.seek(pos, 0) f.write(str) f.close()","title":"Library readin"},{"location":"Scrips/Setup/Scrips_to_md/","text":"Scrips_to_md \u00b6 import os def findAllFile(base): for root, ds, fs in os.walk(base): for f in fs: fullname = os.path.join(root, f) yield fullname.replace('\\\\', '/') def get_header(path): return path.split('/')[-1][:-3] def transfer(path, type): f = open(path, 'r+', encoding=\"utf-8\") content = f.read() content = '# ' + get_header(path) + '\\n```' + type + '\\n' +content + '\\n```' f.close() fw = open(path, 'w+', encoding=\"utf-8\") fw.write(content) fw.close() os.rename(path, path[:-2]+'md') def main(): base = 'docs/' for i in findAllFile(base): if i[-2:] == 'py': transfer(i, 'python') elif i[-2:] == 'sh': transfer(i, 'shell') if __name__ == '__main__': main()","title":"Scrips_to_md"},{"location":"Scrips/Setup/Scrips_to_md/#scrips_to_md","text":"import os def findAllFile(base): for root, ds, fs in os.walk(base): for f in fs: fullname = os.path.join(root, f) yield fullname.replace('\\\\', '/') def get_header(path): return path.split('/')[-1][:-3] def transfer(path, type): f = open(path, 'r+', encoding=\"utf-8\") content = f.read() content = '# ' + get_header(path) + '\\n```' + type + '\\n' +content + '\\n```' f.close() fw = open(path, 'w+', encoding=\"utf-8\") fw.write(content) fw.close() os.rename(path, path[:-2]+'md') def main(): base = 'docs/' for i in findAllFile(base): if i[-2:] == 'py': transfer(i, 'python') elif i[-2:] == 'sh': transfer(i, 'shell') if __name__ == '__main__': main()","title":"Scrips_to_md"},{"location":"Scrips/Setup/Ubuntu_AWD/","text":"Ubuntu_AWD \u00b6 #!/bin/bash act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } check(){ eval $1 } act \"sudo apt-get update\" act \"sudo apt install git\" echo -e \"\\033[33m(+) checking\\033[0m for \\033[36mdocker\\033[0m env...\" act \"bash -c \\\"\\$(curl -fsSL https://github.com/noneSycamore/script_sh/releases/download/0.2/Ubuntu_Docker.sh)\\\"\" act \"sudo git clone https://github.com/zhl2008/awd-platform.git\" act \"sudo cd awd-platform/\" act \"sudo docker pull zhl2008/web_14.04\"","title":"Ubuntu_AWD"},{"location":"Scrips/Setup/Ubuntu_AWD/#ubuntu_awd","text":"#!/bin/bash act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } check(){ eval $1 } act \"sudo apt-get update\" act \"sudo apt install git\" echo -e \"\\033[33m(+) checking\\033[0m for \\033[36mdocker\\033[0m env...\" act \"bash -c \\\"\\$(curl -fsSL https://github.com/noneSycamore/script_sh/releases/download/0.2/Ubuntu_Docker.sh)\\\"\" act \"sudo git clone https://github.com/zhl2008/awd-platform.git\" act \"sudo cd awd-platform/\" act \"sudo docker pull zhl2008/web_14.04\"","title":"Ubuntu_AWD"},{"location":"Scrips/Setup/Ubuntu_Docker/","text":"Ubuntu_Docker \u00b6 #!/bin/bash check(){ eval $1 } act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } act \"check \\\"docker -v\\\"\" tmp=$? if [ $tmp -eq 0 ];then echo -e \"\\033[33m(+)\\033[0m \\033[36mDocker\\033[0m has \\033[32malready\\033[0m been installed\" exit fi echo -e \"\\033[33m(+)\\033[0m \\033[36mDocker\\033[0m is \\033[31mnot\\033[0m installed\" echo -e \"\\033[33m(+) continuing\\033[0m...\" act \"sudo apt update -y\" act \"sudo apt install apt-transport-https ca-certificates curl software-properties-common\" act \"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\" act \"sudo add-apt-repository \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\\\"\" act \"sudo apt update\" act \"sudo apt-cache policy docker-ce\" act \"sudo apt install docker-ce -y\" echo -e \"\\033[33m\" && docker -v && echo -e \"\\033[0m\" act \"check \\\"sudo systemctl start docker\\\"\" tmp=$? if [ $tmp -eq 0 ];then echo -e \"\\033[33m(+) using\\033[0m \\033[36msystemctl\\033[0m...\" act \"sudo systemctl enable docker\" act \"sudo systemctl status docker\" else echo -e \"\\033[33m(+) using\\033[0m \\033[36mservice\\033[0m...\" act \"service docker start\" act \"sudo systemctl enable docker\" act \"service docker status\" fi","title":"Ubuntu_Docker"},{"location":"Scrips/Setup/Ubuntu_Docker/#ubuntu_docker","text":"#!/bin/bash check(){ eval $1 } act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } act \"check \\\"docker -v\\\"\" tmp=$? if [ $tmp -eq 0 ];then echo -e \"\\033[33m(+)\\033[0m \\033[36mDocker\\033[0m has \\033[32malready\\033[0m been installed\" exit fi echo -e \"\\033[33m(+)\\033[0m \\033[36mDocker\\033[0m is \\033[31mnot\\033[0m installed\" echo -e \"\\033[33m(+) continuing\\033[0m...\" act \"sudo apt update -y\" act \"sudo apt install apt-transport-https ca-certificates curl software-properties-common\" act \"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\" act \"sudo add-apt-repository \\\"deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\\\"\" act \"sudo apt update\" act \"sudo apt-cache policy docker-ce\" act \"sudo apt install docker-ce -y\" echo -e \"\\033[33m\" && docker -v && echo -e \"\\033[0m\" act \"check \\\"sudo systemctl start docker\\\"\" tmp=$? if [ $tmp -eq 0 ];then echo -e \"\\033[33m(+) using\\033[0m \\033[36msystemctl\\033[0m...\" act \"sudo systemctl enable docker\" act \"sudo systemctl status docker\" else echo -e \"\\033[33m(+) using\\033[0m \\033[36mservice\\033[0m...\" act \"service docker start\" act \"sudo systemctl enable docker\" act \"service docker status\" fi","title":"Ubuntu_Docker"},{"location":"Scrips/Setup/Ubuntu_zsh/","text":"Ubuntu_zsh \u00b6 #!/bin/bash act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } ohmyzsh(){ curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh > install.sh } act \"sudo apt upgrade -y\" act \"sudo apt install git -y\" echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install \\033[32mstarting...\\033[0m\" act \"sudo apt install zsh -y\" && echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install \\033[32msuccessful\\033[0m\" act \"sudo chsh -s /bin/zsh\" echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m install & configure \\033[32mstarting...\\033[0m\" act \"apt-get -y install build-essential nghttp2 libnghttp2-dev libssl-dev\" if [ ! -f \"install.sh\" ]; then echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m hasn't installed\" echo -e \"\\033[33m(+) try to download\\033[0m \\033[36minstall.sh\\033[0m...\" ohmyzsh tmp=$? until [ $tmp -eq 0 ] do echo -e \"\\033[33m(+)\\033[0m \\033[31mfail\\033[0m to download \\033[36minstall.sh\\033[0m\" echo -e \"\\033[33mretrying...\\033[0m\" ohmyzsh tmp=$? done echo -e \"\\033[33m(+)\\033[0m install.sh for \\033[36moh-my-zsh\\033[0m download \\033[32msucceed\\033[0m\" act \"chmod +x install.sh\" act \"rm -rf ~/.oh-my-zsh\" echo -e \"\\033[33m(+)\\033[0m \\033[32mrunning\\033[0m \\033[36minstall.sh\\033[0m...\" until sh install.sh do echo -e \"\\033[33m(+)\\033[0m \\033[31mfail\\033[0m to install \\033[36moh-my-zsh\\033[0m\" act \"rm -rf ~/.oh-my-zsh\" echo -e \"\\033[33mrunning again...\\033[0m\" done else echo -e \"\\033[33m(+)\\033[0m \\033[36minstall.sh\\033[0m has \\033[32malready\\033[0m been download\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-completions \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions\" act \"fpath+=\\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-autosuggestions\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git \\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\" act \"sed -i '/^plugins=(.*/c plugins=(git zsh-autosuggestions zsh-syntax-highlighting)' ~/.zshrc\" echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m install & configure \\033[32msucceed\\033[0m\" echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh theme\\033[0m \\033[35mpowerlevel10k\\033[0m install \\033[32mstarting...\\033[0m\" act \"git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \\${ZSH_CUSTOM:-\\$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\" act \"sed -i '/^ZSH_THEME=.*/c ZSH_THEME=\\\"powerlevel10k/powerlevel10k\\\"' ~/.zshrc\" act \"rm install.sh\" act \"exec zsh\" fi echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install & configure \\033[32msucceed\\033[0m\" exit","title":"Ubuntu_zsh"},{"location":"Scrips/Setup/Ubuntu_zsh/#ubuntu_zsh","text":"#!/bin/bash act() { echo -e \"\\033[33m$1\\033[0m\" eval $1 } ohmyzsh(){ curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh > install.sh } act \"sudo apt upgrade -y\" act \"sudo apt install git -y\" echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install \\033[32mstarting...\\033[0m\" act \"sudo apt install zsh -y\" && echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install \\033[32msuccessful\\033[0m\" act \"sudo chsh -s /bin/zsh\" echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m install & configure \\033[32mstarting...\\033[0m\" act \"apt-get -y install build-essential nghttp2 libnghttp2-dev libssl-dev\" if [ ! -f \"install.sh\" ]; then echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m hasn't installed\" echo -e \"\\033[33m(+) try to download\\033[0m \\033[36minstall.sh\\033[0m...\" ohmyzsh tmp=$? until [ $tmp -eq 0 ] do echo -e \"\\033[33m(+)\\033[0m \\033[31mfail\\033[0m to download \\033[36minstall.sh\\033[0m\" echo -e \"\\033[33mretrying...\\033[0m\" ohmyzsh tmp=$? done echo -e \"\\033[33m(+)\\033[0m install.sh for \\033[36moh-my-zsh\\033[0m download \\033[32msucceed\\033[0m\" act \"chmod +x install.sh\" act \"rm -rf ~/.oh-my-zsh\" echo -e \"\\033[33m(+)\\033[0m \\033[32mrunning\\033[0m \\033[36minstall.sh\\033[0m...\" until sh install.sh do echo -e \"\\033[33m(+)\\033[0m \\033[31mfail\\033[0m to install \\033[36moh-my-zsh\\033[0m\" act \"rm -rf ~/.oh-my-zsh\" echo -e \"\\033[33mrunning again...\\033[0m\" done else echo -e \"\\033[33m(+)\\033[0m \\033[36minstall.sh\\033[0m has \\033[32malready\\033[0m been download\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-completions \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions\" act \"fpath+=\\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git \\${ZSH_CUSTOM:-\\${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-autosuggestions\" act \"git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git \\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\" act \"sed -i '/^plugins=(.*/c plugins=(git zsh-autosuggestions zsh-syntax-highlighting)' ~/.zshrc\" echo -e \"\\033[33m(+)\\033[0m \\033[36moh-my-zsh\\033[0m install & configure \\033[32msucceed\\033[0m\" echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh theme\\033[0m \\033[35mpowerlevel10k\\033[0m install \\033[32mstarting...\\033[0m\" act \"git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \\${ZSH_CUSTOM:-\\$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\" act \"sed -i '/^ZSH_THEME=.*/c ZSH_THEME=\\\"powerlevel10k/powerlevel10k\\\"' ~/.zshrc\" act \"rm install.sh\" act \"exec zsh\" fi echo -e \"\\033[33m(+)\\033[0m \\033[36mzsh\\033[0m install & configure \\033[32msucceed\\033[0m\" exit","title":"Ubuntu_zsh"},{"location":"Scrips/Setup/filetree/","text":"filetree \u00b6 import os path = \"docs\" files = os.listdir(path) File = [] s = \"\" for file in files: if \".\" in file and file != \"index.md\": File.append(file) elif \".\" not in file and file != \"images\": os.system(\"cd docs && tree \" + file + \"> ../1.txt\") f = open(\"1.txt\", 'r') str = f.read() limit = str.find(\"directories\") - 2 s += str[:limit] for f1 in File: s += f1 + \"\\n\\n\" print(s) os.system(\"rm 1.txt\") s = \"```\\n\" + s[:-1] + \"```\\n\" f = open(\"docs/index.md\", \"r+\", encoding=\"utf-8\") content = f.read() i = content.find(\"Tree:\\n\") + 6 j = content.find(\"\\n## Every time\") content = content[:i] + \"\\n\" + s + content[j:] f.close() fw = open(\"docs/index.md\", 'w+', encoding=\"utf-8\") fw.write(content) fw.close()","title":"filetree"},{"location":"Scrips/Setup/filetree/#filetree","text":"import os path = \"docs\" files = os.listdir(path) File = [] s = \"\" for file in files: if \".\" in file and file != \"index.md\": File.append(file) elif \".\" not in file and file != \"images\": os.system(\"cd docs && tree \" + file + \"> ../1.txt\") f = open(\"1.txt\", 'r') str = f.read() limit = str.find(\"directories\") - 2 s += str[:limit] for f1 in File: s += f1 + \"\\n\\n\" print(s) os.system(\"rm 1.txt\") s = \"```\\n\" + s[:-1] + \"```\\n\" f = open(\"docs/index.md\", \"r+\", encoding=\"utf-8\") content = f.read() i = content.find(\"Tree:\\n\") + 6 j = content.find(\"\\n## Every time\") content = content[:i] + \"\\n\" + s + content[j:] f.close() fw = open(\"docs/index.md\", 'w+', encoding=\"utf-8\") fw.write(content) fw.close()","title":"filetree"},{"location":"Scrips/Setup/git_Setup/","text":"Git Seting up \u00b6 init github repo \u00b6 git init git config --global user.name \"nonesycamore\" git config --global user.email \"sycamore.none@gmail.com\" \uff08 Private \uff09\u83b7\u53d6 Personal access tokens git remote add <repo_name> https://<token>@github.com/noneSycamore/<repo_name>.git \u66f4\u6539 branch : main --> master \u5c06\u4ed3\u5e93\u7684\u6587\u4ef6\u5148 pull \u5230\u672c\u5730: git pull <repo_name> master update repo \u00b6 When pushing files: Windows: @ECHO OFF git add * git commit -m 'update' git push script_sh master PAUSE Linux: git add * git commit -m 'update' git push transfer master","title":"Git Seting up"},{"location":"Scrips/Setup/git_Setup/#git-seting-up","text":"","title":"Git Seting up"},{"location":"Scrips/Setup/git_Setup/#init-github-repo","text":"git init git config --global user.name \"nonesycamore\" git config --global user.email \"sycamore.none@gmail.com\" \uff08 Private \uff09\u83b7\u53d6 Personal access tokens git remote add <repo_name> https://<token>@github.com/noneSycamore/<repo_name>.git \u66f4\u6539 branch : main --> master \u5c06\u4ed3\u5e93\u7684\u6587\u4ef6\u5148 pull \u5230\u672c\u5730: git pull <repo_name> master","title":"init github repo"},{"location":"Scrips/Setup/git_Setup/#update-repo","text":"When pushing files: Windows: @ECHO OFF git add * git commit -m 'update' git push script_sh master PAUSE Linux: git add * git commit -m 'update' git push transfer master","title":"update repo"}]}